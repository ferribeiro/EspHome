esphome:
  name: teste-de-io
  friendly_name: teste de IO

esp8266:
  board: esp01_1m

web_server:
  port: 80

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "6qZh3nvMd5R6ouN1K5dxyKQj7LhFZYmDdhVKIfm5DJI="

ota:
  password: "b72e5b86dd2f467c0295ee61f8fdc3ce"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.0.249
    gateway: 192.168.0.1
    subnet: 255.255.255.0
    dns1: 8.8.8.8
    dns2: 192.168.0.1
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Teste-De-Io Fallback Hotspot"
    password: "wa5NrvGWreBN"

captive_portal:

# -------------------------------------- ESP8266 ----------------------------------------
# | D1M | GPIO | Input |   Output   |                       Notes                       |
# |-----|------|-------|------------|---------------------------------------------------|
# |  D3 |  00  |  P-UP |    OK      | connected to FLASH bttn, BOOT FAILS if pulled LOW |
# |  TX |  01  | OK/TX |   *OK      | HIGH at boot, debug out boot, BOOT FAILS if P-LOW |
# |  D4 |  02  |  P-UP |  OK/LED    | HIGH at boot, board LED, BOOT FAILS if P-LOW      |
# |  RX |  03  |  *OK  |  OK/RX     | HIGH at boot                                      |
# |  D2 |  04  |   OK  |    OK      | often used as SDA (I2C)                           |
# |  D1 |  05  |   OK  |    OK      | often used as SCL (I2C)                           |
# |     | *06  |   X   |    X       | NOT WORK on ESPHome, connected to FLASH chip      |
# |     | *07  |   X   |    X       | NOT WORK on ESPHome, connected to FLASH chip      |
# |     | *08  |   X   |    X       | NOT WORK on ESPHome, connected to FLASH chip      |
# |     | *09  |   X   |    X       | NOT WORK on ESPHome, HIGH at boot                 |
# |     | ?10  |   ?   |    ?       | *NOT recommended to use, HIGH at boot*            |
# |     | *11  |   X   |    X       | NOT WORK on ESPHome, connected to FLASH chip      |
# |  D6 |  12  |   OK  |    OK      | SPI (MISO), can output a low signal at boot       |
# |  D7 |  13  |   OK  |    OK      | SPI (MOSI), can output a low signal at boot       |
# |  D5 |  14  |   OK  |    OK      | SPI (SCLK), can output a low signal at boot       |
# |  D8 |  15  | P-GND |   *OK      | SPI (CS), BOOT FAILS if pulled HIGH               |
# |  D0 |  16  | NoInt | No PWM/I2C | HIGH at boot, used to wake up from deep sleep     |
# |  A0 | ADC0 | AD In |    X       | Analog Input only  0 to 3.3v                      |
# ---------------------------------------------------------------------------------------

output:
  # Register the blue LED as a dimmable output
  - platform: esp8266_pwm
    id: onboard_led
    pin:
      number: GPIO2 # Led MÃ³dulo
      inverted: true

light:
  # make a light out of it.
  - platform: monochromatic
    name: "Onboard LED"
    output: onboard_led
    id: led

sensor:
  - platform: uptime
    name: "Uptime"

  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
    
text_sensor:
  - platform: version
    name: "ESPHome Version"

binary_sensor:
  - platform: status
    name: "Status"





  - platform: gpio   #
    pin:
      number: GPIO9 # AM-CN3
      mode:
        input: true
        pullup: true
      inverted: true
    name: "GPIO9-CN3-4-AM"

  - platform: gpio   #
    pin:
      number: GPIO10 # Azul-CN3 ok
      mode:
        input: true
        pullup: true
      inverted: true
    name: "GPIO10-CN3-7-AZ"
#    on_press:
#      - light.toggle: triac_05

  - platform: gpio   #
    pin:
      number: GPIO3 # VD-CN3 ok
      mode:
        input: true
        pullup: true
      inverted: true
    name: "GPIO3-CN3-6-VD"