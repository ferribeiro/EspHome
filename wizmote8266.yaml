esphome:
  name: wizmote8266
  friendly_name: wizmote8266

esp8266:
  board: esp01_1m

web_server:
  port: 80

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "9lAitLAu+aL1wzlZo1tOwrc0oDXBKKtXfHuvKd3icq8="

ota:
  password: "06ef36ba975e7e6638bc52f812f13880"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.0.220
    gateway: 192.168.0.1
    subnet: 255.255.255.0
    dns1: 8.8.8.8
    dns2: 192.168.0.1

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "wizmote-8266"
    password: "12345678"

captive_portal:

# Saidas do WizMote
#  1 = on
#  2 = off
#  3 = Lua
#  8 = -
#  9 = +
# 16 = 1
# 17 = 2
# 18 = 3
# 19 = 4

external_components:
  - source: github://jesserockz/wizmote-esphome
    components:
      - esp_now
      - wizmote

esp_now:

wizmote:
  on_button:
    if:
      condition:
        lambda: return data.button >= 1 && data.button <= 19;
      then:
        - homeassistant.event:
            event: esphome.wizmote_choose
            data:
              mac: !lambda 'return format_hex(data.bssid, 6);'
              button: !lambda 'return data.button - 0;'   # Retorna o Botão pressionado
              sequence: !lambda 'return data.sequence;'   # numero vezes que algum comando foi enviado
      else:
        - homeassistant.event:
            event: esphome.wizmote_action
            data:
              mac: !lambda 'return format_hex(data.bssid, 6);'
              button: !lambda 'return data.button;'
              sequence: !lambda 'return data.sequence;'


# Exemplo de automação.

# - id: '9999000009000'
#   alias: 9000 - ESPHome Wizmote Receiver esc
#   description: ''
#   trigger:
#   - platform: event
#     event_type: esphome.wizmote_choose
#     event_data:
#       mac: 6c29900e5e24  #6C.29.90.0E.5E.24
#   condition: []
#   action:

#   - variables:
#       button: '{{ trigger.event.data.button | int }}'

#       button1: '{{ trigger.event.data.sequence }}' # opcional
#   - service: input_text.set_value                  # opcional
#     data:                                          # opcional
#       entity_id: input_text.wiz_mote               # opcional
#       value: '{{ button1 }}'                       # opcional

#   - choose:
#     - conditions:
#         - '{{ button | int == 16 }}'  # Botao 1
#       sequence:
#       - service: light.toggle
#         entity_id:
#         - light.office_light

#     - conditions:
#         - '{{ button | int == 17 }}'  # Botao 2
#       sequence:
#       - service: light.toggle
#         entity_id:
#         - light.office_downligt

#   mode: restart